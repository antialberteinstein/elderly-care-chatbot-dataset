@echo off
chcp 65001 >nul
setlocal EnableDelayedExpansion

REM ===================================================================
REM  ü§ñ Elderly Care QA Dataset Manager - Windows Launcher
REM  Advanced tool for generating conversational datasets
REM ===================================================================

title QA Dataset Manager - Windows

echo.
echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë                 ü§ñ ELDERLY CARE QA MANAGER                   ‚ïë
echo ‚ïë                                                              ‚ïë
echo ‚ïë     Advanced Dataset Generator for Elderly Care Chatbots    ‚ïë
echo ‚ïë                    Powered by Google Gemini                 ‚ïë
echo ‚ïë                                                              ‚ïë
echo ‚ïë                      Windows Launcher                       ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
echo.

REM Check if Python is available
python --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå Python is not installed or not in PATH
    echo Please install Python 3.7+ from https://python.org
    pause
    exit /b 1
)

REM Check if virtual environment exists
if not exist .venv (
    echo üîÑ Creating virtual environment...
    python -m venv .venv
    if errorlevel 1 (
        echo ‚ùå Failed to create virtual environment
        pause
        exit /b 1
    )
)

REM Activate virtual environment
echo üîå Activating virtual environment...
call .venv\Scripts\activate.bat
if errorlevel 1 (
    echo ‚ùå Failed to activate virtual environment
    pause
    exit /b 1
)

REM Check and install dependencies
echo üîç Checking dependencies...
python -c "import google.generativeai, pandas, dotenv" >nul 2>&1
if errorlevel 1 (
    echo üì¶ Installing dependencies...
    pip install -r requirements.txt
    if errorlevel 1 (
        echo ‚ùå Failed to install dependencies
        pause
        exit /b 1
    )
)

REM Parse command line arguments
set "INTERACTIVE=1"
set "COMMAND="

if "%1"=="" goto :interactive
if "%1"=="--help" goto :help
if "%1"=="-h" goto :help
if "%1"=="--check" set "COMMAND=--check" & set "INTERACTIVE=0"
if "%1"=="--demo" set "COMMAND=--demo" & set "INTERACTIVE=0"
if "%1"=="--marathon" set "COMMAND=--marathon" & set "INTERACTIVE=0"
if "%1"=="--merge" set "COMMAND=--merge" & set "INTERACTIVE=0"
if "%1"=="--analyze" set "COMMAND=--analyze" & set "INTERACTIVE=0"
if "%1"=="--clean" set "COMMAND=--clean" & set "INTERACTIVE=0"
if "%1"=="--info" set "COMMAND=--info" & set "INTERACTIVE=0"

if "!INTERACTIVE!"=="1" goto :interactive
if not "!COMMAND!"=="" goto :run_command

:help
echo.
echo üéØ USAGE:
echo   run.bat                    # Interactive menu mode
echo   run.bat --check           # Check Google API connection
echo   run.bat --demo            # Generate demo dataset
echo   run.bat --marathon        # Start marathon generation
echo   run.bat --merge           # Merge CSV files
echo   run.bat --analyze         # Analyze datasets
echo   run.bat --clean           # Clean output directories
echo   run.bat --info            # Show system information
echo   run.bat --help            # Show this help
echo.
goto :end

:interactive
echo ‚úÖ Starting interactive mode...
python qa_manager.py
goto :end

:run_command
echo ‚úÖ Running command: !COMMAND!
python qa_manager.py !COMMAND!
goto :end

:end
echo.
echo üëã Thank you for using QA Dataset Manager!
pause
